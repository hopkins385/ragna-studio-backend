/* eslint-disable */
export default async () => {
    const t = {
        ["./modules/chat-message/enums/chat-message.enum"]: await import("./modules/chat-message/enums/chat-message.enum"),
        ["./modules/chat-message/enums/chat-message-role.enum"]: await import("./modules/chat-message/enums/chat-message-role.enum"),
        ["./modules/chat-message/dto/create-chat-message.dto"]: await import("./modules/chat-message/dto/create-chat-message.dto"),
        ["./modules/user/entities/user.entity"]: await import("./modules/user/entities/user.entity"),
        ["./modules/assistant/entities/assistant.entity"]: await import("./modules/assistant/entities/assistant.entity"),
        ["./modules/chat-message/entities/chat-message.entity"]: await import("./modules/chat-message/entities/chat-message.entity"),
        ["./modules/ai-model/enums/provider.enum"]: await import("./modules/ai-model/enums/provider.enum"),
        ["./modules/collection-able/dto/collection-able.dto"]: await import("./modules/collection-able/dto/collection-able.dto"),
        ["./modules/media-able/dto/media-able.dto"]: await import("./modules/media-able/dto/media-able.dto"),
        ["./modules/media-able/dto/media-able-response.dto"]: await import("./modules/media-able/dto/media-able-response.dto"),
        ["./modules/llm/dto/llm-list-response.dto"]: await import("./modules/llm/dto/llm-list-response.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./modules/user/dto/create-user.dto"), { "CreateUserDto": { name: { required: true, type: () => String }, email: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./modules/user/dto/update-user.dto"), { "UpdateUserDto": {} }], [import("./modules/user/entities/user.entity"), { "UserEntity": { id: { required: true, type: () => String }, email: { required: true, type: () => String }, name: { required: true, type: () => String }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, totalCredits: { required: true, type: () => Number }, lastLoginAt: { required: true, type: () => Date }, emailVerified: { required: true, type: () => Date }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date }, onboardedAt: { required: true, type: () => Date }, firstTeamId: { required: true, type: () => String }, roles: { required: false, type: () => [String] }, teams: { required: false } } }], [import("./modules/user/entities/session-user.entity"), { "SessionUser": { id: { required: true, type: () => String }, email: { required: true, type: () => String }, name: { required: true, type: () => String }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, totalCredits: { required: true, type: () => Number }, lastLoginAt: { required: true, type: () => Date }, hasEmailVerified: { required: true, type: () => Object }, hasOnboarded: { required: true, type: () => Object }, firstTeamId: { required: true, type: () => String }, credits: { required: true, type: () => Number }, roles: { required: true, type: () => [String] }, teams: { required: true, type: () => [String] } } }], [import("./modules/auth/dto/credentials.dto"), { "CredentialsDto": {} }], [import("./modules/auth/google/social-auth-response.dto"), { "SocialAuthResponseDto": { socialUserId: { required: true, type: () => String }, email: { required: true, type: () => String }, name: { required: false, type: () => String }, firstName: { required: false, type: () => String }, lastName: { required: false, type: () => String }, emailVerified: { required: false, type: () => Boolean } } }], [import("./modules/auth/google/google-auth-callback-body.dto"), { "GoogleAuthCallbackBody": {} }], [import("./modules/auth/dto/register-user-body.dto"), { "RegisterUserBody": {} }], [import("./common/dto/cuid-param.dto"), { "IdParam": {} }], [import("./modules/account/dto/create-account.dto"), { "CreateAccountDto": {} }], [import("./modules/account/dto/update-account.dto"), { "UpdateAccountDto": {} }], [import("./modules/account/dto/update-account-name-body.dto"), { "UpdateAccountNameBody": {} }], [import("./modules/account/dto/update-account-password-body.dto"), { "UpdateAccountPasswordBody": {} }], [import("./modules/account/dto/delete-account-body.dto"), { "DeleteAccountBody": {} }], [import("./modules/chat/dto/get-all-chats.dto"), { "GetAllChatsForUserDto": { userId: { required: true, type: () => String }, page: { required: true, type: () => Number }, limit: { required: true, type: () => Number }, searchQuery: { required: true, type: () => String } } }], [import("./modules/chat-message/dto/create-chat-message.dto"), { "ChatMessageDto": { type: { required: true, enum: t["./modules/chat-message/enums/chat-message.enum"].ChatMessageType }, role: { required: true, enum: t["./modules/chat-message/enums/chat-message-role.enum"].ChatMessageRole }, content: { required: true, type: () => String }, visionContent: { required: false, type: () => Object } }, "CreateChatMessageDto": { userId: { required: true, type: () => String }, chatId: { required: true, type: () => String }, message: { required: true, type: () => t["./modules/chat-message/dto/create-chat-message.dto"].ChatMessageDto } }, "CreateChatMessageBody": {} }], [import("./modules/assistant/entities/assistant.entity"), { "AssistantEntity": { id: { required: true, type: () => String }, title: { required: true, type: () => String }, systemPrompt: { required: true, type: () => String }, hasKnowledgeBase: { required: true, type: () => Boolean }, hasWorkflow: { required: true, type: () => Boolean }, tools: { required: true, type: () => [Object] }, llm: { required: false, type: () => Object } } }], [import("./modules/chat-message/entities/chat-message.entity"), { "ChatMessageEntity": { id: { required: true, type: () => String }, type: { required: true, type: () => String }, role: { required: true, type: () => String }, content: { required: true, type: () => String }, visionContent: { required: true, type: () => String }, tokenCount: { required: true, type: () => Number } } }], [import("./modules/chat/entities/chat.entity"), { "ChatEntity": { id: { required: true, type: () => String }, title: { required: true, type: () => String }, assistantId: { required: true, type: () => String }, userId: { required: true, type: () => String }, user: { required: false, type: () => t["./modules/user/entities/user.entity"].UserEntity }, assistant: { required: false, type: () => t["./modules/assistant/entities/assistant.entity"].AssistantEntity }, messages: { required: false, type: () => [t["./modules/chat-message/entities/chat-message.entity"].ChatMessageEntity] }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date } } }], [import("./modules/chat/dto/create-chat.dto"), { "CreateChatBody": {} }], [import("./modules/chat/dto/update-chat.dto"), { "UpdateChatDto": {} }], [import("./modules/assistant/dto/find-assistant.dto"), { "FindAssistantDto": { assistantId: { required: true, type: () => String } } }], [import("./modules/assistant/dto/create-assistant.dto"), { "CreateAssistantBody": {}, "CreateAssistantDto": { teamId: { required: true, type: () => String }, llmId: { required: true, type: () => String }, title: { required: true, type: () => String }, description: { required: true, type: () => String }, systemPrompt: { required: true, type: () => String }, isShared: { required: true, type: () => Boolean }, tools: { required: true, type: () => [String] } } }], [import("./modules/assistant/dto/update-assistant.dto"), { "UpdateAssistantBody": {}, "UpdateAssistantDto": { teamId: { required: true, type: () => String }, llmId: { required: true, type: () => String }, assistantId: { required: true, type: () => String }, title: { required: true, type: () => String }, description: { required: true, type: () => String }, systemPrompt: { required: true, type: () => String }, isShared: { required: true, type: () => Boolean }, hasKnowledgeBase: { required: true, type: () => Boolean }, hasWorkflow: { required: true, type: () => Boolean }, tools: { required: true, type: () => [String] } } }], [import("./modules/assistant/dto/find-all-assistant.dto"), { "FindAllAssistantsDto": { teamId: { required: true, type: () => String }, page: { required: true, type: () => Number }, limit: { required: true, type: () => Number }, searchQuery: { required: true, type: () => String } } }], [import("./modules/assistant/dto/delete-assistant.dto"), { "DeleteAssistantBody": {}, "DeleteAssistantDto": { teamId: { required: true, type: () => String }, assistantId: { required: true, type: () => String } } }], [import("./modules/assistant-tool/dto/create-assistant-tool.dto"), { "CreateAssistantToolDto": { assistantId: { required: true, type: () => String }, toolId: { required: true, type: () => String } } }], [import("./common/dto/paginate.dto"), { "PaginateBody": {}, "PaginateQuery": {} }], [import("./modules/socket/dto/emit-event.dto"), { "EmitEventDto": { room: { required: true, type: () => String }, event: { required: true, type: () => String }, data: { required: true, type: () => Object } } }], [import("./modules/assistant/dto/update-assistant-knw-body.dto"), { "UpdateAssistantHasKnowledgeBody": {} }], [import("./modules/assistant/dto/create-from-template.dto"), { "CreateAssistantFromTemplateBody": {} }], [import("./modules/credit/events/credit-event.dto"), { "CreditEventDto": { userId: { required: true, type: () => String }, creditAmount: { required: true, type: () => Number } } }], [import("./modules/chat-stream/dto/create-chat-stream.dto"), { "CreateChatStreamDto": { provider: { required: true, enum: t["./modules/ai-model/enums/provider.enum"].ProviderType }, model: { required: true, type: () => String }, systemPrompt: { required: true, type: () => String }, messages: { required: true, type: () => [Object] }, functionIds: { required: true, type: () => [Number] }, maxTokens: { required: true, type: () => Number }, temperature: { required: true, type: () => Number } } }], [import("./modules/collection/dto/create-collection.dto"), { "CreateCollectionDto": { teamId: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: false, type: () => String } } }], [import("./modules/collection-able/dto/collection-able.dto"), { "CollectionAbleDto": { id: { required: true, type: () => String }, type: { required: true, type: () => Number } }, "CreateCollectionDto": { teamId: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String } } }], [import("./modules/chat-stream/dto/create-chat-stream-body.dto"), { "CreateChatStreamBody": {} }], [import("./modules/collection/dto/create-collection-body.dto"), { "CreateCollectionBody": {} }], [import("./modules/collection/dto/update-collection-body.dto"), { "UpdateCollectionBody": {} }], [import("./modules/collection/dto/find-collection-for-body.dto"), { "FindCollectionForBody": {} }], [import("./modules/llm/dto/llm-list-response.dto"), { "LlmListResponseDto": { llms: { required: true, type: () => [Object] } } }], [import("./modules/collection-able/dto/detach-collection-able.dto"), { "DetachCollectionAbleDto": { model: { required: true, type: () => t["./modules/collection-able/dto/collection-able.dto"].CollectionAbleDto }, collectionId: { required: true, type: () => String } } }], [import("./modules/collection-able/dto/detach-all-collection-able.dto"), { "DetachAllCollectionAbleDto": { model: { required: true, type: () => t["./modules/collection-able/dto/collection-able.dto"].CollectionAbleDto } } }], [import("./modules/collection-able/dto/attach-collection-able.dto"), { "AttachCollectionAbleDto": { model: { required: true, type: () => t["./modules/collection-able/dto/collection-able.dto"].CollectionAbleDto }, collectionId: { required: true, type: () => String } } }], [import("./modules/collection-able/dto/collection-able-body.dto"), { "CollectionAbleBody": {} }], [import("./modules/collection-able/dto/detach-collection-able-body.dto"), { "DetachCollectionAbleBody": {} }], [import("./modules/media/dto/create-media.dto"), { "CreateMediaDto": { teamId: { required: true, type: () => String }, name: { required: true, type: () => String }, fileName: { required: true, type: () => String }, filePath: { required: true, type: () => String }, fileMime: { required: true, type: () => String }, fileSize: { required: true, type: () => Number }, model: { required: true, type: () => ({ id: { required: true, type: () => String }, type: { required: true, type: () => String } }) } } }], [import("./modules/upload/dto/file-upload.dto"), { "UploadFileDto": { file: { required: true, type: () => Object }, userId: { required: true, type: () => String }, teamId: { required: true, type: () => String } } }], [import("./modules/media-able/dto/media-able.dto"), { "MediaAbleDto": { id: { required: true, type: () => String }, type: { required: true, type: () => Number } } }], [import("./modules/media-able/dto/create-media-able.dto"), { "CreateMediaAbleDto": { mediaId: { required: true, type: () => String }, model: { required: true, type: () => t["./modules/media-able/dto/media-able.dto"].MediaAbleDto }, role: { required: true, type: () => String, nullable: true } } }], [import("./modules/media-able/dto/attach-media-able.dto"), { "AttachMediaAbleDto": { mediaId: { required: true, type: () => String }, model: { required: true, type: () => t["./modules/media-able/dto/media-able.dto"].MediaAbleDto }, role: { required: true, type: () => String, nullable: true } } }], [import("./modules/media-able/dto/detach-media-able.dto"), { "DetachMediaAbleDto": { model: { required: true, type: () => t["./modules/media-able/dto/media-able.dto"].MediaAbleDto } } }], [import("./modules/media-able/dto/media-able-body.dto"), { "MediaAbleBody": {} }], [import("./modules/record/dto/create-record.dto"), { "CreateRecordDto": { collectionId: { required: true, type: () => String }, mediaId: { required: true, type: () => String }, teamId: { required: true, type: () => String } }, "FindRecordsDto": { collectionId: { required: true, type: () => String }, teamId: { required: true, type: () => String } } }], [import("./modules/record/dto/create-record-body.dto"), { "CreateRecordBody": {} }], [import("./modules/text-to-image/utils/flux-pro-inputs.dto"), { "FluxProInputsDto": { prompt: { required: true, type: () => String }, output_format: { required: false, type: () => Object }, width: { required: false, type: () => Number }, height: { required: false, type: () => Number }, steps: { required: false, type: () => Number }, prompt_upsampling: { required: false, type: () => Boolean }, seed: { required: false, type: () => Number, nullable: true }, guidance: { required: false, type: () => Number }, safety_tolerance: { required: false, type: () => Number, nullable: true }, interval: { required: false, type: () => Number } } }], [import("./modules/text-to-image/utils/flux-ultra-inputs.dto"), { "FluxUltraInputsDto": { prompt: { required: true, type: () => String }, seed: { required: false, type: () => Number }, aspect_ratio: { required: false, type: () => String }, safety_tolerance: { required: false, type: () => Number }, output_format: { required: false, type: () => Object }, raw: { required: false, type: () => Boolean }, image_prompt: { required: false, type: () => String }, image_prompt_strength: { required: false, type: () => Number } } }], [import("./modules/text-to-image/dto/image-conversion-job-data.dto"), { "ImageConversionJobDataDto": { filePathOrUrl: { required: true, type: () => String }, bucketPath: { required: true, type: () => String }, fileName: { required: true, type: () => String } } }], [import("./modules/text-to-image/dto/flux-pro-body.dto"), { "FluxProBody": {} }], [import("./modules/text-to-image/dto/flux-ultra-body.dto"), { "FluxUltraBody": {} }], [import("./modules/text-to-image/dto/text-to-image.param.dto"), { "ProjectIdParam": {}, "FolderIdParam": {}, "RunIdParam": {} }], [import("./modules/text-to-image/dto/text-to-image.query.dto"), { "TextToImagePaginatedQuery": {} }], [import("./modules/workflow/dto/create-workflow.dto"), { "CreateWorkflowDto": { teamId: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, assistantId: { required: false, type: () => String } } }], [import("./modules/workflow/dto/update-workflow.dto"), { "UpdateWorkflowDto": { workflowId: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String } } }], [import("./modules/workflow/dto/find-all-workflows.dto"), { "FindAllWorkflowsDto": { teamId: { required: true, type: () => String }, page: { required: true, type: () => Number }, limit: { required: false, type: () => Number } } }], [import("./modules/media-able/dto/media-able-response.dto"), { "MediaAbleResponseDto": { id: { required: true, type: () => String }, mediaId: { required: true, type: () => String }, mediaName: { required: true, type: () => String } }, "MediaAblesResponseDto": { mediaAbles: { required: true, type: () => [t["./modules/media-able/dto/media-able-response.dto"].MediaAbleResponseDto] } } }], [import("./modules/workflow-step/dto/create-workflow-step.dto"), { "CreateWorkflowStepDto": { workflowId: { required: true, type: () => String }, teamId: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, orderColumn: { required: true, type: () => Number }, rowCount: { required: true, type: () => Number }, assistantId: { required: true, type: () => String }, rowContents: { required: false, type: () => [String] } } }], [import("./modules/workflow-step/dto/update-workflow-step.dto"), { "UpdateWorkflowStepDto": { workflowStepId: { required: true, type: () => String }, name: { required: false, type: () => String }, description: { required: false, type: () => String }, orderColumn: { required: false, type: () => Number } }, "UpdateWorkflowStepAssistantDto": { workflowStepId: { required: true, type: () => String }, assistantId: { required: true, type: () => String } } }], [import("./modules/document-item/dto/create-document-item.dto"), { "CreateDocumentItemDto": { documentId: { required: true, type: () => String }, orderColumn: { required: true, type: () => Number }, status: { required: true, type: () => String }, type: { required: true, type: () => String }, content: { required: true, type: () => String } } }], [import("./modules/document-item/dto/update-document-item.dto"), { "UpdateDocumentItemDto": { documentItemId: { required: true, type: () => String }, content: { required: true, type: () => String }, orderColumn: { required: false, type: () => Number }, status: { required: false, type: () => String }, type: { required: false, type: () => String } } }], [import("./modules/document/dto/create-document.dto"), { "CreateDocumentDto": { name: { required: true, type: () => String }, description: { required: true, type: () => String }, status: { required: true, type: () => String }, teamId: { required: true, type: () => String } } }], [import("./modules/document/dto/find-all-documents.dto"), { "FindAllDocumentsDto": { teamId: { required: true, type: () => String }, page: { required: true, type: () => Number } } }], [import("./modules/document/dto/update-document.dto"), { "UpdateDocumentDto": { documentId: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, status: { required: true, type: () => String } } }], [import("./modules/workflow-step/dto/create-workflow-item.dto"), { "CreateWorkflowItemDto": { documentId: { required: true, type: () => String }, content: { required: true, type: () => String }, orderColumn: { required: true, type: () => Number }, type: { required: true, type: () => String }, status: { required: true, type: () => String } } }], [import("./modules/workflow-step/dto/update-workflow-item.dto"), { "UpdateWorkflowItemDto": { workflowStepId: { required: true, type: () => String }, itemId: { required: true, type: () => String }, itemContent: { required: true, type: () => String } } }], [import("./modules/workflow/dto/create-workflow-body.dto"), { "CreateWorkflowBody": {} }], [import("./modules/workflow/dto/update-workflow-body.dto"), { "UpdateWorkflowBody": {} }], [import("./modules/workflow-step/dto/create-workflow-step-body.dto"), { "CreateWorkflowStepBody": {} }], [import("./modules/workflow-step/dto/update-workflow-step-body.dto"), { "UpdateWorkflowStepBody": {} }], [import("./modules/workflow-step/dto/update-workflow-item-body.dto"), { "UpdateWorkflowItemBody": {} }], [import("./modules/workflow-step/dto/update-workflow-item-params.dto"), { "UpdateWorkflowItemParams": {} }], [import("./modules/workflow-step/dto/update-workflow-step-ass.dto"), { "UpdateWorkflowStepAssistantBody": {} }], [import("./modules/workflow-step/dto/update-workflow-step-ids-body.dto"), { "UpdateWorkflowStepIdsBody": {} }], [import("./modules/onboard/dto/create-onboard.dto"), { "CreateOnboardDto": {} }], [import("./modules/onboard/dto/update-onboard.dto"), { "UpdateOnboardDto": {} }], [import("./modules/onboard/dto/onboard-user.dto"), { "OnboardUserDto": { userId: { required: true, type: () => String }, userName: { required: true, type: () => String }, userEmail: { required: true, type: () => String }, orgName: { required: true, type: () => String } } }], [import("./modules/onboard/dto/onboard-user-body.dto"), { "OnboardUserBody": {} }], [import("./modules/mail/entities/email-template.entity"), { "EmailTemplate": { id: { required: true, type: () => String }, subject: { required: true, type: () => String }, content: { required: true, type: () => String }, metadata: { required: false, type: () => Object } } }], [import("./modules/assistant-job/dto/assistant-job.dto"), { "AssistantJobDto": { totalStepCount: { required: true, type: () => Number }, totalRowCount: { required: true, type: () => Number }, stepIndex: { required: true, type: () => Number }, rowIndex: { required: true, type: () => Number }, stepName: { required: true, type: () => String }, llmProvider: { required: true, type: () => String }, llmNameApi: { required: true, type: () => String }, assistantId: { required: true, type: () => String }, functionIds: { required: true, type: () => [Number] }, inputDocumentItemIds: { required: true, type: () => [String] }, documentItemId: { required: true, type: () => String }, systemPrompt: { required: true, type: () => String }, temperature: { required: true, type: () => Number }, maxTokens: { required: true, type: () => Number }, userId: { required: true, type: () => String }, workflowId: { required: true, type: () => String } } }], [import("./modules/workflow-execution/dto/workflow-execution-event.dto"), { "WorkflowExecutionEventDto": { userId: { required: true, type: () => String }, workflowId: { required: true, type: () => String } } }], [import("./modules/provider-auth/dto/provider-auth.dto"), { "ProviderAuthDto": { providerName: { required: true, type: () => Object }, type: { required: true, type: () => Object }, accountInfo: { required: true, type: () => Object }, userId: { required: true, type: () => String }, accessToken: { required: true, type: () => String }, refreshToken: { required: true, type: () => String }, accessTokenExpiresAt: { required: true, type: () => Date }, refreshTokenExpiresAt: { required: true, type: () => Date } } }], [import("./modules/google-drive/dto/google-drive-code-query.dto"), { "GoogleDriveCodeQuery": {} }], [import("./modules/google-drive/dto/google-drive-search-query.dto"), { "GoogleDriveSearchQuery": {} }], [import("./modules/user-favorite/dto/favorite-type-param.dto"), { "FavoriteTypeParam": {}, "FavoriteTypeBody": {} }], [import("./modules/user-favorite/dto/many-user-favorites-body.dto"), { "ManyUserFavoritesBody": {} }], [import("./modules/user-favorite/dto/add-user-favorites-body.dto"), { "AddUserFavoriteBody": {} }], [import("./modules/assistant-template/entities/assistant-template.entity"), { "AssistantTemplateEntity": { id: { required: true, type: () => String }, llmId: { required: true, type: () => String }, title: { required: true, type: () => String }, description: { required: true, type: () => String } } }], [import("./common/dto/limit-query.dto"), { "LimitQuery": {} }], [import("./modules/editor/dto/editor-completion-body.dto"), { "EditorCompletionBody": {} }], [import("./modules/token-usage/events/token-usage-event.dto"), { "TokenUsageEventDto": { userId: { required: true, type: () => String }, modelId: { required: true, type: () => String }, tokens: { required: true, type: () => ({ prompt: { required: true, type: () => Number }, completion: { required: true, type: () => Number }, reasoning: { required: true, type: () => Number }, total: { required: true, type: () => Number } }) } } }], [import("./modules/account/entities/account.entity"), { "Account": {} }], [import("./modules/auth/google/social-login-body.dto"), { "SocialLoginBody": {} }], [import("./modules/chat-stream/dto/create-chat-stream-ini.dto"), { "CreateChatStreamIniDto": { provider: { required: true, enum: t["./modules/ai-model/enums/provider.enum"].ProviderType }, model: { required: true, type: () => String }, messages: { required: true, type: () => [Object] }, functionIds: { required: true, type: () => [String] } } }], [import("./modules/chat-stream/dto/stream-payload.dto"), { "StreamPayloadDto": { userId: { required: true, type: () => String }, chatId: { required: true, type: () => String }, functionIds: { required: true, type: () => [Number] }, model: { required: true, type: () => String }, provider: { required: true, type: () => String }, messages: { required: true, type: () => [Object] }, systemPrompt: { required: true, type: () => String }, maxTokens: { required: true, type: () => Number } } }], [import("./modules/collection/entities/collection.entity"), { "Collection": {} }], [import("./modules/document/entities/document.entity"), { "Document": {} }], [import("./modules/document-item/entities/document-item.entity"), { "DocumentItem": {} }], [import("./modules/google-drive/entities/google-drive.entity"), { "GoogleDrive": {} }], [import("./modules/llm/dto/create-llm.dto"), { "CreateLlmDto": {} }], [import("./modules/llm/dto/update-llm.dto"), { "UpdateLlmDto": {} }], [import("./modules/llm/entities/llm.entity"), { "Llm": {} }], [import("./modules/media/dto/update-media.dto"), { "UpdateMediaDto": {} }], [import("./modules/media/entities/media.entity"), { "Media": {} }], [import("./modules/onboard/entities/onboard.entity"), { "Onboard": {} }], [import("./modules/record/dto/find-records.dto"), { "FindRecordsDto": { collectionId: { required: true, type: () => String }, teamId: { required: true, type: () => String } } }], [import("./modules/record/entities/record.entity"), { "Record": {} }], [import("./modules/socket/entities/socket.entity"), { "Socket": {} }], [import("./modules/text-to-image/dto/create-text-to-image.dto"), { "CreateTextToImageDto": {} }], [import("./modules/text-to-image/dto/update-text-to-image.dto"), { "UpdateTextToImageDto": {} }], [import("./modules/text-to-image/entities/text-to-image.entity"), { "TextToImage": {} }], [import("./modules/upload/dto/create-upload.dto"), { "CreateUploadDto": {} }], [import("./modules/upload/dto/update-upload.dto"), { "UpdateUploadDto": {} }], [import("./modules/upload/entities/upload.entity"), { "Upload": {} }], [import("./modules/user-favorite/entities/user-favorite.entity"), { "UserFavorite": {} }], [import("./modules/workflow/entities/workflow.entity"), { "Workflow": {} }], [import("./modules/workflow-execution/dto/create-workflow-execution.dto"), { "CreateWorkflowExecutionDto": {} }], [import("./modules/workflow-execution/dto/update-workflow-execution.dto"), { "UpdateWorkflowExecutionDto": {} }], [import("./modules/workflow-execution/entities/workflow-execution.entity"), { "WorkflowExecution": {} }], [import("./modules/workflow-step/dto/find-all-workflow-steps.dto"), { "FindAllWorkflowStepsDto": { workflowId: { required: true, type: () => String } } }], [import("./modules/workflow-step/entities/workflow-step.entity"), { "WorkflowStep": {} }]], "controllers": [[import("./modules/auth/auth.controller"), { "AuthController": { "login": { type: Object }, "refreshTokens": { type: Object }, "logout": {}, "getSession": {}, "googleCallback": { type: Object }, "googleAuthUrl": {}, "register": {}, "confirmEmail": {}, "getInviteToken": {} } }], [import("./modules/user/user.controller"), { "UserController": { "createInviteToken": { type: Object }, "create": {}, "findAll": {}, "findOne": { type: Object }, "update": { type: Object }, "remove": {} } }], [import("./modules/account/account.controller"), { "AccountController": { "find": { type: Object }, "updateName": {}, "updatePassword": {}, "delete": {} } }], [import("./modules/chat/chat.controller"), { "ChatController": { "allPagniated": {}, "all": {}, "findLatest": {}, "create": {}, "findById": {}, "update": {}, "delete": {}, "deleteMessages": {} } }], [import("./modules/socket/socket.controller"), { "SocketController": { "createAuthToken": {} } }], [import("./modules/assistant/assistant.controller"), { "AssistantController": { "create": {}, "createFromTemplate": {}, "findAll": {}, "findOne": {}, "update": {}, "updateHasKnowledgeBase": {}, "delete": {} } }], [import("./modules/assistant-tool/assistant-tool.controller"), { "AssistantToolController": { "getAllTools": {} } }], [import("./modules/stripe/stripe.controller"), { "StripeController": { "handleWebhook": {} } }], [import("./modules/credit/credit.controller"), { "CreditController": { "getUserCredits": { type: Number }, "useCredits": {}, "purchaseCredits": {}, "getCreditUsageHistory": {} } }], [import("./modules/chat-stream/chat-stream.controller"), { "ChatStreamController": { "createChatMessageStream": {} } }], [import("./modules/collection/collection.controller"), { "CollectionController": { "create": {}, "findAllPaginated": {}, "findAll": {}, "findAllFor": {}, "findOne": {}, "update": {}, "remove": {} } }], [import("./modules/chat-message/chat-message.controller"), { "ChatMessageController": { "create": {} } }], [import("./modules/llm/llm.controller"), { "LlmController": { "getAllModels": { type: t["./modules/llm/dto/llm-list-response.dto"].LlmListResponseDto } } }], [import("./modules/collection-able/collection-able.controller"), { "CollectionAbleController": { "attachTo": {}, "detachFrom": {}, "detachAllFrom": {}, "replaceTo": {} } }], [import("./modules/media/media.controller"), { "MediaController": { "findFirst": {}, "findAllFor": {}, "paginateFindAllFor": {}, "remove": {} } }], [import("./modules/upload/upload.controller"), { "UploadController": { "uploadFile": {} } }], [import("./modules/record/record.controller"), { "RecordController": { "create": {}, "findOne": {}, "findAllPaginated": {}, "remove": {} } }], [import("./modules/text-to-image/text-to-image.controller"), { "TextToImageController": { "generateFluxProImages": {}, "generateFluxUltraImages": {}, "getRandomImagesPaginated": {}, "getFolders": {}, "downloadImage": {}, "getFolderImagesRunsPg": {}, "getFolderImagesRuns": {}, "deleteRun": {}, "toggleHideRun": {}, "unDeleteRun": {} } }], [import("./modules/workflow/workflow.controller"), { "WorkflowController": { "create": {}, "allPaginated": {}, "findOne": {}, "findFull": {}, "update": {}, "exportWorkflow": {}, "remove": {}, "removeRows": {} } }], [import("./modules/workflow-step/workflow-step.controller"), { "WorkflowStepController": { "createStep": {}, "createRow": {}, "update": {}, "updateAssistant": {}, "updateInputSteps": {}, "updateItem": {}, "remove": {} } }], [import("./modules/onboard/onboard.controller"), { "OnboardController": { "onboardUser": {} } }], [import("./modules/workflow-execution/workflow-execution.controller"), { "WorkflowExecutionController": { "createWorkflowExec": {} } }], [import("./modules/google-drive/google-drive.controller"), { "GoogleDriveController": { "getConsentURL": {}, "callback": {}, "hasAccess": {}, "findData": {} } }], [import("./modules/user-favorite/user-favorite.controller"), { "UserFavoriteController": { "addFavorite": { type: Object }, "getFavorites": {}, "getFavoriteDetail": {}, "getManyFavoriteDetails": {}, "getFavoritesByType": { type: Object }, "removeFavorite": {} } }], [import("./modules/assistant-template/assistant-template.controller"), { "AssistantTemplateController": { "findAll": {}, "findAllPaginated": {}, "findRandom": {}, "findOne": {}, "findAllCategories": {}, "findAllCategoriesPaginated": {}, "findOneCategory": {}, "findTemplatesByCategories": {} } }], [import("./modules/prompt-wizard/prompt-wizard.controller"), { "PromptWizardController": { "createPrompt": {} } }], [import("./modules/cache-manager/cache-manager.controller"), { "CacheManagerController": { "purgeCache": {} } }], [import("./modules/editor/editor.controller"), { "EditorController": { "completion": {} } }]] } };
};